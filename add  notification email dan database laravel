//send notifikasi email dan database di laravel
https://wahyuivan.medium.com/membuat-notifikasi-ke-email-dan-halaman-website-mu-dengan-laravel-notifications-laravel-queues-852a2c823d0c
- php artisan queue:table
- php artisan notification:table
- php artisan migrate
- php artisan make:notification ExampleNotification


-selanjutnya buat middleware -> agar nanti notifikasinya bisa di akses di semua halaman

perintahnya : php artisan make:middleware Notifications
isi filenya seperti ini :
// $user = Auth::user();

        // if ($user) {
        //     $notifications = $user->notifications;
        //     $unreadCount = $user->unreadNotifications->count();
        // } else {
        //     $notifications = [];
        //     $unreadCount = 0;
        // }

        // view()->share('notifications', $notifications);
        // view()->share('unreadCount', $unreadCount);

        // Mendapatkan semua notifikasi
        // $notifications = DatabaseNotification::all();
        $notifications = DatabaseNotification::latest()->take(5)->get();

        // Menghitung jumlah notifikasi yang belum dibaca
        $unreadCount = DatabaseNotification::whereNull('read_at')->count();

        view()->share('notifications', $notifications);
        view()->share('unreadCount', $unreadCount);
        
        return $next($request);


tambahkan juga pada kernel seperti ini :
'notification' => \App\Http\Middleware\Notifications::class,

selanjutnya notificationya bisa di taruh dalam middleware group route

contoh isinya notification file yang kita buat yg ada di dalam folder : app->http->notifications->namafile 
class NewTaskNotification extends Notification
{
    use Queueable;

    /**
     * Create a new notification instance.
     *
     * @return void
     */
    private $task;
    public function __construct($task)
    {
        $this->task = $task;
    }

    /**
     * Get the notification's delivery channels.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function via($notifiable)
    {
        // return ['mail'];
        return ['database','mail'];
    }

    /**
     * Get the mail representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return \Illuminate\Notifications\Messages\MailMessage
     */
    public function toMail($notifiable)
    {
        return (new MailMessage)
                ->subject('Ada Task Baru')
                ->greeting('Hello! ' . $notifiable->first_name)
                ->line('Ada Tugas Baru dengan nama : '. $this->task->title. ', Deadline '.$this->task->deadline)
                // ->action('View Detail', url('tasks/detail/'.$this->task->id))
                ->action('View Detail', route('detail-notification', $this->id))
                ->line('Thanks')
                ->salutation('Regards,')
                ->salutation('Raveloux Surabaya');
    }

    /**
     * Get the array representation of the notification.
     *
     * @param  mixed  $notifiable
     * @return array
     */
    public function toArray($notifiable)
    {
        return [
            'text_title' => 'Ada Task Baru',
            'messages' => 'Ada task baru dg nama'. $this->task->title,
            'route' => 'tasks/detail/'.$this->task->id,
        ];
    }
}
