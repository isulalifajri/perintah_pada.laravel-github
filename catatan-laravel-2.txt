//terminal
//untuk crud database tanpa form di laravel
- php artisan tinker
//buat varibel
 - $user = new App\Models\User;
 - $user -> name = 'abc';
 - $user ->email = 'abc@gmail.com'
 - $user->password = bcrypt('12345') 
 - $user->save()

 - $user->all() //lihat isi tabel
 
 - $user = new User //new isi tabel

 - $user->find(2000)
 - $user->findOrFail(2000)

- Post::first() // menampilkan data yang pertama

- Post::find(2) // menampilkan data post yang id nya 2

- Post::pluck('title')  //menampilkan data berdasarkan kolom

- jika berhubungan dengan database, jangan lupa buat model nya lebih dahulu baru kemudian buat controllernya
- contohnya gini:
- php artisan make:model -m Namemodel (-m di gunakan agar model terhubung langsung dengan migration)

//jika tabel berelasi
- Post::where('category_id', 1)->get()

//end tinker

//seeder/Databaseseeder
 Post::create([
  'name => 'abc',
 'email' => 'abc@gmail.com',
'password' => bcrypt('12345')
]);

Category::create([
  'name => 'web programming',
 'slug' => 'web-programming',
]);

 - php artisan db:seed //menjalankan seeder
 - php artisan migrate:fresh --seed // menghapus dan menambah isi tabel
 - php artisan make:controller NameController --resource --model=NameModel  //menghubungkan controller langsung ke model

//faker
- config -> app -> faker_locale ->ubah ke indonesia
- php artisan make:factory PostFactory

//n+1 problem
- install library -> composer require itsgoingd/clockwork
- install extensi ->clockwork
- agar berubah dari lazi loading ke eager loading tambahkan ->with
- "posts" => Post::with(['author', 'category'])->get()

- lazy eager loading ->load
- pindah with dari controller ke model

//pagination
- Provider -> AppServicesProvider
- defaultnya laravel menggunakan tailwind
- jika menggunakan bootstrap ubah  fungsi -> public function boot()
- jadi gini -> Paginator::useBootstrap();
- jangan lupa namespacenya juga di tambahin.

//image-upload in laravel
- php artisan storage:link

//noted
- php artisan route:list

//make softdelets in laravel
pada model yang datanya ingin di tambahkan soft delets tambahkan class ini: 
	use Illuminate\Database\Eloquent\SoftDeletes;
dan di dalam class modelnya tambahkan ini :
	use SoftDeletes;
dalam controller
$data->delete($category->id); -> melakukan softdelets
$category = Category::onlyTrashed()->get(); -> memanggil data yang di softdeletes
Category::withTrashed()->restore(); // restore all atau mengembalikan semua data yang tersoftdelets
Category::withTrashed()->find($id)->restore(); // restore berdasarkan id atau mengembalikan data yang tersoftdelets berdasarkan id
$data = Category::onlyTrashed()->find($id); -> memanggil data yang tersoftdelets berdasarkan id
$data->forceDelete($data->id); -> menghapus data secara permanent


//middleware authorization
- make middleware IsAdmin -> php artisan make:middleware IsAdmin
-> in public function handler fill this :
if(!auth()->check() || auth()->user()->role !== 'admin'){
            // abort(403);
            return redirect('/');
        } //jangan lupa daftarkan nama middlewarenya di Kernel
- create name middleware in kernel.php
 protected $middlewareAliases = [
....
 'admin' => \App\Http\Middleware\IsAdmin::class
....
];
//Gate
- app -> provider -> AppServiceProvide.php -> in public function boot
Gate::define('admin', function(User $user){
            return $user->role === 'admin';
        });

//ubah timezone menjadi local di laravel
pergi config -> app.php dan ubah timezone seperti di bawah ini :
// 'timezone' => 'UTC',
    'timezone' => 'Asia/Jakarta',


//membuat tracker website dengan laravel
return request()->userAgent(); //mendapatkan nama web browser
return $_SERVER['REMOTE_ADDR']; //mendapat alamat ip web server -> return request()->ip();
return request()->getClientIp(); // mendapatkan alamat ip client web server

//get name browser in laravel
link lengkap :
https://panjeh.medium.com/laravel-detector-mobile-browser-name-version-platform-device-robot-crawler-user-language-8499bee7607c

composer require jenssegers/agent -W 
seterusnya ikuti perintah/cara-cara yang ada link di atas

//generate data dalam tabel to pdf
- composer require barryvdh/laravel-dompdf -> jalankan perintah tersebut
 kemudian pada config/app.php tambahkan kode class di bawah ini
'providers' => [
	....
	Barryvdh\DomPDF\ServiceProvider::class,
],
'aliases' => [
	....
	'PDF' => Barryvdh\DomPDF\Facade::class,
]
- kemudian jika kita ingin menggunakannya di controller tambahkan class ini di headernya
-> use Barryvdh\DomPDF\Facade\Pdf;

//perintah ini digunakan untuk menampilkan pdf pada browser
$pdf = Pdf::loadView('pdf.invoice', $data); -> pdf namafolder, invoice namafile di dalam folder pdf
return $pdf->download('invoice.pdf'); // ini di gunakan untuk sambil mendownloadnya
return $pdf->stream(); -> jika hanya ingin menampilkannya gunakan perintah -> ini hanya menampilkannya tanpa mendownloadnya langsung.
-> menampilkan gambar pada render dompdf laravel :
<img src="{{ public_path('asset/img/nameimage.png') }}" height="50" alt="icon">.
jangan lupa di php.ini extension=gd di aktifkan atau hilangkan titik koma di bagian depanya.
from this ;extension=gd change to -> extension=gd


// Menambahkan laravel auditing 
Referensi Link :
1. https://laravel-auditing.com/guide/installation.html
2. https://dev.to/dendihandian/tracking-change-activities-using-laravel-audit-5ffg
3. https://medium.com/@santhoshj/wherever-there-are-entities-with-multiple-states-we-would-need-to-keep-track-of-the-changes-made-7d8072f9cefc

//Menambahkan laravel activity log
Referensi Link :
1. https://github.com/spatie/laravel-activitylog
2. https://divisidev.com/post/laravel-activity-log
3. https://spatie.be/docs/laravel-activitylog/v4/installation-and-setup



